import pygame
import random
pygame.init()
win = pygame.display.set_mode((1200, 700))
pygame.display.set_caption("henki")
run = True
flowdirection = -40
F = 1
flowdirection1 = 40
F1= -1
flownum = 0
flownum1 = 0
flow = "left"
flow1 = "right"
bridge1x = 400
bridgex = 800
C = 255
HenkLife = True

def flowrandom():
    flownum = random.randint(1, 2)
    global flowdirection
    global flow
    global F
    if flownum == 1:
        flowdirection = -40
        flow = "left"
        F = 1
    else:
        flowdirection = 40
        flow = "right"
        F = -1
def flowrandom1():
    flownum1 = random.randint(1, 2)
    global flowdirection1
    global flow1
    global F1
    if flownum1 == 1:
        flowdirection1 = -40
        flow1 = "left"
        F1 = 1
    else:
        flowdirection1 = 40
        flow1 = "right"
        F1 = -1

def setbridge1x():
    global bridge1x
    global bridge1
    if flow1 == "left":
        bridge1x = random.randint(300, 800)
    if flow1 == "right":
        bridge1x = random.randint(100, 500)
    bridge1 = Bridge(bridge1x, river1.rect.y)
def setbridgex():
    global bridgex
    global bridge2
    if flow == "left":
        bridgex = random.randint(300, 800)
    if flow == "right":
        bridgex = random.randint(100, 500)
    bridge2 = Bridge(bridgex, river2.rect.y)
class bullet:
   def __init__(self, yspeed, Xbullet, Ybullet):
       self.image = pygame.Surface((4, 50))
       self.image.fill((255, 0, 255))
       self.rect = self.image.get_rect()
       self.rect.x = Xbullet
       self.rect.y = Ybullet

   def move(self, yspeed):
       self.rect.y -= yspeed

class Player:
   def __init__(self, Playerx, Playery):
       self.image = pygame.Surface((75, 75))
       self.image.fill((C, C, C))
       self.rect = self.image.get_rect()
       self.rect.x = Playerx
       self.rect.y = Playery


   def move(self, Movex, Movey):
       self.rect.x += Movex
       self.rect.y += Movey

class Chaser:
   def __init__(self, Chaserx, Chasery):
       self.image = pygame.Surface((75, 75))
       self.image.fill((0, 0, 0))
       self.rect = self.image.get_rect()
       self.rect.x = Chaserx
       self.rect.y = Chasery

   def move(self, Chaserspeed):
       self.rect.x += Chaserspeed

class River:
   def __init__(self, Riverx, Rivery):
       self.image = pygame.Surface((1500, 125))
       self.image.fill((0, 50, 255))
       self.rect = self.image.get_rect()
       self.rect.x = Riverx
       self.rect.y = Rivery
   def down(self, fallspeed):
       self.rect.y += fallspeed
class Bridge:
    def __init__(self, bridgenumber, rivernumber):
        self.image = pygame.Surface((150, 137))
        self.image.fill((139, 69, 19))
        self.rect = self.image.get_rect()
        self.rect.x = bridgenumber
        self.rect.y = rivernumber-6

    def move(self, Movex, Movey):
       self.rect.x += Movex
       self.rect.y += Movey

singleflow = 0
Flowright = False
henk = Player(200, 200)
piet = Chaser(100, 600)
river1 = River(0, 300)
river2 = River(0, -200)
bridge1 = Bridge(bridge1x, river1.rect.y)
bridge2 = Bridge(bridgex, river2.rect.y)
Buletis = False
Bullet = bullet(2, piet.rect.x + 50, piet.rect.y + 25)
bulletexists = False
while run:
   win.fill((59, 186, 24))
   pygame.time.delay(33)
   pygame.draw.rect(win, (0, 50, 255), (0, 0, 100, 700))
   pygame.draw.rect(win, (0, 50, 255), (1105, 0, 100, 700))
   for event in pygame.event.get():
       if event.type == pygame.QUIT:
           run = False
# player 1 movement
   press = pygame.key.get_pressed()
   if press[pygame.K_s]:
       henk.move(0, 15)
   if press[pygame.K_d]:
       henk.move(15, 0)
   if press[pygame.K_w]:
       henk.move(0, -15)
   if press[pygame.K_a]:
       henk.move(-15, 0)

#player 2 movement
   if press[pygame.K_LEFT] and piet.rect.x > 100:
       piet.move(-10)
   if press[pygame.K_RIGHT] and piet.rect.x <= 1020:
       piet.move(10)
   if press[pygame.K_SPACE]:
       if Buletis:
           if Bullet.rect.y < 0:
               Bullet.rect.x = piet.rect.x + 33
               Bullet.rect.y = piet.rect.y + 10
       else:
           Bullet = bullet(2, piet.rect.x + 50, piet.rect.y + 25)
           Buletis = True
   if Buletis:
       Bullet.move(50)

   # bridgemovement

   if flow1 == "left":
       bridge1x -= 5
       bridge1.move(-5, 0)
   if flow1 == "right":
       bridge1x += 5
       bridge1.move(5, 0)
   if flow == "left":
       bridgex -= 5
       bridge2.move(-5, 0)
   if flow == "right":
       bridgex += 5
       bridge2.move(5, 0)


   if henk.rect.colliderect(bridge1):
       henk.move(flowdirection1 + 35*F1, 5)
   if henk.rect.colliderect(bridge2):
       henk.move(flowdirection + 35*F, 5)

   #rivermovemet and directions
   if river1.rect.y < 700:
       if henk.rect.colliderect(river1) and not henk.rect.colliderect(bridge1):
           henk.move(flowdirection1, 0)
       if river1.rect.y == 695:
          river1.down(-1000)
          bridge1.move(0, -1000)
       bridge1.move(0, 5)
       river1.down(5)
   if river1.rect.y <= -150:
       flowrandom1()
       setbridge1x()
   if river2.rect.y < 700:
       if henk.rect.colliderect(river2) and not henk.rect.colliderect(bridge2):
           henk.move(flowdirection, 0)
       if river2.rect.y == 695:
           river2.down(-1000)
           bridge2.move(0, -1000)
       bridge2.move(0, 5)
       river2.down(5)
   if river2.rect.y <= -150:
       flowrandom()
       setbridgex()

   if henk.rect.colliderect(Bullet):
       C -= 51
       if C == 0:
           HenkLife = False

   if not HenkLife:
       print("print")

  # drawing time
   win.blit(river1.image, river1.rect)
   win.blit(river2.image, river2.rect)
   if Buletis:
       win.blit(Bullet.image, Bullet.rect)
   win.blit(bridge1.image, bridge1.rect)
   win.blit(bridge2.image, bridge2.rect)
   win.blit(piet.image, piet.rect)
   win.blit(henk.image, henk.rect)
   pygame.draw.rect(win, (C, C, C), (henk.rect.x, henk.rect.y, 75, 75))
   pygame.display.update()

pygame.quit()
